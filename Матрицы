//Матрицы Бухтияров.А.В-Вап-3
#include <iostream>
#include <ctime>
#include <array>
#include <cstdlib>
using namespace std;

/*В квадратной матрице, найти сумму отрицательных элементов, лежащих на главной
диагонали*/
void task_3() {
    const int ROW = 3; //строка
    const int COL = 3; //колонка
    
    int arr[ROW][COL];
    int negative_sum=0;
    int j = COL-1;
    
    for (int i=0; i < ROW; i++) {
        for (int j=0; j < COL; j++) {
            arr[i][j] = rand() % 10;
        }
    }
    for (int i = 0; i < ROW; i++) {
        for (int j = 0; j < COL; j++) {
            cout << '[' << arr[i][j] << ']';
        }
        cout << ',' << endl;
    }
    for (int i = 0; i <ROW; i++) {
        negative_sum = negative_sum + arr[i][j];
        j--;
    }
    cout << "Result=> " << negative_sum;
}
/*Дана матрица. Составить массив, каждый элемент которого равен максимальному
элементу соответствующей строки матрица.*/
void task_6() {
    const int ROW = 3; //строка
    const int COL = 3; //колонка

    int arr[ROW][COL];
}
/*Дана матрица. Элементы первой строки — количество осадков в соответствующий
день, второй строки — сила ветра в этот день. Найти, был ли в эти дни ураган?
(ураган — когда самый сильный ветер был в самый дождливый день).*/
void task_7() {

}
/*Объявить, реализовать заполнение данными с клавиатуры ИЛИ из файла и вывести
на экран матрицу, описывающую следующие сущности. Предложите свой вариант.
a. Двумерное изображение. Изображение состоит из пикселей. Каждый пиксель
характеризуется яркостью цветовых каналов: красный, синий, зелёный. */
void task_9a() {

}
/*Реализовать вычисление матричных норм из списка выше (только для квадратных
матриц).*/
void task_10_3() {

}

int main()
{
    srand(time(NULL));
    cout << "Hello World!\n";
    task_6();
}
